#!/bin/bash

# This script automates debian system updates. It runs in two modes: logging
# and manual.
#
# Usage: updater {man|log}
#
# In logging mode, it's headless and writes command exit status to the
# specified logging file. Set log_file, which defaults to ~/.updater. 
#
# In manual mode, it additionally reconfigures packages and clears cache files
# as well. It doesn't suppress output so the user can handle any requests for
# input. I've found that the unattended-upgrades package works pretty well. Use
# that instead of running this in logging mode with cron.

log_file="$HOME/.updater"
date="$(date "+%Y.%m.%d_%H.%M.%S")"

# Executes arguments as command and records success and failure in log_file
# environment variable.
function log_status {
    if "$@"; then
        echo "[$date] $@ succeeded." >> "$log_file"
    else
        echo "[$date] $@ failed." >> "$log_file"
    fi
}

# Assert root
if [ $(id -u) -ne 0 ]; then # if not root
    echo "Error: Requires root" >&2
    exit 1
# Check for apt-get
elif ! which apt-get &>/dev/null; then # if no apt-get
    echo "Error: apt-get command not found" >&2
    exit 1
# Check args
elif [ $# -ne 1 ] && [ "$1" != "log" ] && [ "$1" != "man" ]; then
    echo "Usage: ${0##*/} {man|log}" >&2
    exit 1
else
    mode="$1"
fi

# Update source list
apt-get update

# Check for log mode, headless update
if [ "$mode" = "log" ]; then
    # Update packages
    log_status apt-get dist-upgrade -y
    log_status apt-get autoremove -y
# Run man (manual) mode.
else
    # Reconfigure potentially broken packages
    dpkg --configure -a

    # Update packages
    apt-get dist-upgrade -y
    apt-get autoremove -y

    # Cleanup apt-get cache files
    apt-get clean -y
    apt-get autoclean -y
fi
